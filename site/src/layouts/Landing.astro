---
import Base from './Base.astro';
interface Props {
    title: string;
    description?: string;
    canonical?: string;
    chips?: string[];
    background?: 'hero' | null;
    bgImage?: string;
}
const { title, description = '', canonical = '/', chips = [], background = null, bgImage } = Astro.props as Props;
const base = import.meta.env.BASE_URL;
const bgUrl = background === 'hero' ? `${base}images/backgrounds/bg-homepage-hero.jpg` : (bgImage ? (bgImage.startsWith('http') ? bgImage : `${base}${bgImage.replace(/^\//,'')}`) : '');
const sectionStyle = bgUrl ? `background-image:url(${bgUrl});background-size:cover;background-position:center;background-repeat:no-repeat` : '';
const containerClass = background === 'hero' ? 'hero-container' : '';
---
<Base title={title} description={description} canonical={canonical}>
    <section class="hero-plate page-stage" style={sectionStyle} data-suppress-sticky>
        <div class={`container ${containerClass} hero-layout--grid`}>
            <div>
                <h1 class="display hero__headline"><slot name="heading">{title}</slot></h1>
                <p class="hero__body" style="max-width:720px"><slot name="subhead">{description}</slot></p>
                {(chips?.length>0) && (
                    <ul class="hero__chips" style="padding:0;margin:12px 0 0;list-style:none">
                        {chips.map(c => <li class="chip chip--outline-cyan">{c}</li>)}
                    </ul>
                )}
                <div class="hero__actions" style="margin-top:12px">
                    <slot name="primary-ctas" />
                </div>
                <slot name="left-extra" />
            </div>
            <div>
                <slot />
            </div>
        </div>
    </section>
    <div class="section-divider"></div>
    <section class="container" style="padding:8px 0 64px">
        <slot name="below" />
    </section>
    <style>
        /* Hero layout styles now in custom-styles.css (unified hero system) */
    </style>
</Base>


