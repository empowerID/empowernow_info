---
export async function getStaticPaths() {
    const slugs = ['oauth','oidc','pkce','rar','par','jarm','fapi-2-0','scim','ciba','mcp','caep','token-exchange','resource-indicators','dpop','mtls','dcr','authzen'];
	return slugs.map((slug) => ({ params: { slug } }));
}
const { slug } = Astro.params as { slug: string };
import Base from '../../../layouts/Base.astro';
const pretty = slug
  .replace('oidc','OpenID Connect (OIDC)')
  .replace('rar','Rich Authorization Requests (RAR)')
  .replace('par','Pushed Authorization Requests (PAR)')
  .replace('jarm','JARM')
  .replace('fapi-2-0','FAPI 2.0')
  .replace('scim','SCIM')
  .replace('ciba','CIBA')
  .replace('mcp','Model Context Protocol (MCP)')
  .replace('caep','CAEP')
  .replace('token-exchange','Token Exchange (RFC 8693)')
  .replace('resource-indicators','Resource Indicators (RFC 8707)')
  .replace('dpop','DPoP (RFC 9449)')
  .replace('mtls','OAuth mTLS (RFC 8705)')
  .replace('dcr','Dynamic Client Registration (RFC 7591/7592)')
  .replace('authzen','OpenID AuthZEN')
  .replace('oauth','OAuth 2.0');
const title = `${pretty} — Primer`;
const description = 'What it is, why it matters, enforcement points, and how it works.';
const canonical = `/resources/standards/${slug}/`;
---
<Base title={title} description={description} canonical={canonical}>
	<section class="container" style="padding:96px 0 24px">
		<h1 class="display" style="margin:0 0 8px">{title}</h1>
		<p style="color:#9ba3b7">Short, factual overview. Links to docs where relevant.</p>
	</section>
    <section class="container" style="padding:8px 0 80px">
        <div class="glass-card" style="padding:20px;margin-bottom:16px">
            <h2 class="section-title" style="margin:0 0 8px">Why it matters</h2>
            <p style="color:#9ba3b7;margin:0">Standards reduce risk and vendor lock‑in. We implement this spec across our Studios and runtime so policy is portable.</p>
        </div>
        <div class="glass-card" style="padding:20px;margin-bottom:16px">
            <h2 class="section-title" style="margin:0 0 8px">Where it’s enforced</h2>
            <ul style="color:#9ba3b7;line-height:1.8;margin:0">
                <li><strong>Gateway</strong>: pre‑execution gating (plan/schema pins, params/egress)</li>
                <li><strong>Shield</strong>: inline budgets/stream caps/content checks</li>
                <li><strong>PDP</strong>: decisions with constraints/obligations/TTL</li>
                <li><strong>IdP</strong>: passports, token exchange, consent/DPoP</li>
            </ul>
        </div>
        <div class="glass-card" style="padding:20px">
            <h2 class="section-title" style="margin:0 0 8px">How it works (high level)</h2>
            {
                slug === 'token-exchange' && (
                    <>
                        <p style="color:#9ba3b7;margin:0 0 8px">Exchange a subject token and (optionally) actor token for a new access token. We set <code>act.sub</code> for OBO and may include ARIA extensions.</p>
                        <pre class="glass-card" style="padding:12px;overflow:auto"><code>{`mermaid\nsequenceDiagram\n  autonumber\n  participant C as Client\n  participant IdP as Token Endpoint\n  C->>IdP: POST /token (grant_type=token-exchange)\n  IdP-->>C: access_token (aud, act.sub)`}</code></pre>
                    </>
                )
            }
            {
                slug === 'resource-indicators' && (
                    <>
                        <p style="color:#9ba3b7;margin:0 0 8px">Send <code>resource</code> to set the intended audience precisely.</p>
                        <pre class="glass-card" style="padding:12px;overflow:auto"><code>{`mermaid\nsequenceDiagram\n  participant BFF\n  participant IdP\n  BFF->>IdP: token (resource=api://admin)\n  IdP-->>BFF: access_token (aud=[api://admin])`}</code></pre>
                    </>
                )
            }
            {
                slug === 'dpop' && (
                    <>
                        <p style="color:#9ba3b7;margin:0 0 8px">Sender‑constrained tokens with <code>cnf.jkt</code> bound to a JWK; proof on each call.</p>
                        <pre class="glass-card" style="padding:12px;overflow:auto"><code>{`mermaid\nflowchart TD\n  A[Client] -- DPoP proof --> T[Token Endpoint]\n  T -->|cnf.jkt| AT[Access Token]\n  A -- proof + AT --> RS[Resource Server]`}</code></pre>
                    </>
                )
            }
            { slug === 'mtls' && (<p style="color:#9ba3b7;margin:0">Mutual TLS sender‑constrains tokens using client certificates per RFC 8705.</p>) }
            { slug === 'dcr' && (<p style="color:#9ba3b7;margin:0">Dynamic Client Registration automates client onboarding and updates (RFC 7591/7592).</p>) }
            { slug === 'authzen' && (<p style="color:#9ba3b7;margin:0">AuthZEN defines portable authorization decision contracts; our PDP aligns with its model for constraints and obligations.</p>) }
        </div>
    </section>
</Base>


