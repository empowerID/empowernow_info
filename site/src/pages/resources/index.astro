---
import Base from '../../layouts/Base.astro';
const title = 'Resources | EmpowerNow';
const description = 'Standards primers, demos, trust, ROI, research, and case studies for agent governance and integration.';
const canonical = '/resources/';
const base = import.meta.env.BASE_URL;

type ResItem = { id:string; title:string; summary:string; href:string; type:'primer'|'demo'|'template'|'roi'|'case'|'note'; tags:string[]; updated_at:string; duration?:string; featured?:boolean };

const collections = [
    { id:'standards', title:'Standards (Primers)', description:'OAuth, OIDC, PKCE, RAR, PAR, JARM, FAPI 2.0, SCIM, CIBA, MCP, CAEP', href: `${base}resources/standards/` },
    { id:'trust', title:'Trust Center', description:'Security, Compliance, Privacy', href: `${base}trust/` },
    { id:'proof', title:'Proof & ROI', description:'Receipts you can audit, ROI you can defend', href: `${base}resources/proof-roi/` },
    { id:'research', title:'Research Hub', description:'Competitor matrices, claims, SERP, ROI', href: `${base}resources/research/` },
    { id:'cases', title:'Case Studies', description:'Program briefs and testimonials', href: `${base}resources/case-studies/` },
    { id:'search', title:'Site Search', description:'Find anything on the site fast', href: `${base}search/` },
];

const allResources: ResItem[] = [
    // Primers — Standards
    { id:'primer-oauth', title:'OAuth 2.0 Primer', summary:'Delegated authorization framework and token usage.', href:`${base}resources/standards/oauth/`, type:'primer', tags:['OAuth'], updated_at:'2025-09-01' },
    { id:'primer-oidc', title:'OIDC Primer', summary:'OpenID Connect identity layer on OAuth 2.0.', href:`${base}resources/standards/oidc/`, type:'primer', tags:['OIDC','OAuth'], updated_at:'2025-09-01' },
    { id:'primer-pkce', title:'PKCE Primer', summary:'Proof Key for Code Exchange best practices.', href:`${base}resources/standards/pkce/`, type:'primer', tags:['OAuth'], updated_at:'2025-09-01' },
    { id:'primer-rar', title:'RAR Primer', summary:'Rich Authorization Requests with authorization_details.', href:`${base}resources/standards/rar/`, type:'primer', tags:['OAuth','OIDC'], updated_at:'2025-09-01' },
    { id:'primer-par', title:'PAR Primer', summary:'Pushed Authorization Requests back‑channel pattern.', href:`${base}resources/standards/par/`, type:'primer', tags:['OAuth','OIDC'], updated_at:'2025-09-01' },
    { id:'primer-jarm', title:'JARM Primer', summary:'JWT-secured authorization response mode.', href:`${base}resources/standards/jarm/`, type:'primer', tags:['OIDC','OAuth'], updated_at:'2025-09-01' },
    { id:'primer-fapi', title:'FAPI 2.0 Primer', summary:'Hardened security profile for OAuth/OIDC.', href:`${base}resources/standards/fapi-2-0/`, type:'primer', tags:['OIDC','OAuth'], updated_at:'2025-09-01' },
    { id:'primer-scim', title:'SCIM Primer', summary:'Provisioning standard for users, groups, entitlements.', href:`${base}resources/standards/scim/`, type:'primer', tags:['SCIM'], updated_at:'2025-09-01' },
    { id:'primer-ciba', title:'CIBA Primer', summary:'Back‑channel authentication flow.', href:`${base}resources/standards/ciba/`, type:'primer', tags:['OIDC'], updated_at:'2025-09-01' },
    { id:'primer-caep', title:'CAEP Primer', summary:'Event‑based session/risk signals.', href:`${base}resources/standards/caep/`, type:'primer', tags:['OIDC'], updated_at:'2025-09-01' },
    { id:'primer-dpop', title:'DPoP Primer', summary:'Sender‑constrained tokens with proof JWT.', href:`${base}resources/standards/dpop/`, type:'primer', tags:['OAuth'], updated_at:'2025-09-01' },
    { id:'primer-mtls', title:'OAuth mTLS Primer', summary:'Mutual‑TLS auth and cert‑bound tokens.', href:`${base}resources/standards/mtls/`, type:'primer', tags:['OAuth'], updated_at:'2025-09-01' },
    { id:'primer-dcr', title:'Dynamic Client Registration', summary:'Register and manage OAuth clients via API.', href:`${base}resources/standards/dcr/`, type:'primer', tags:['OAuth'], updated_at:'2025-09-01' },
    { id:'primer-te', title:'Token Exchange (RFC 8693)', summary:'On‑behalf‑of delegation and token swapping.', href:`${base}resources/standards/token-exchange/`, type:'primer', tags:['OAuth'], updated_at:'2025-09-01' },
    { id:'primer-ri', title:'Resource Indicators (RFC 8707)', summary:'Audience selection via resource parameter.', href:`${base}resources/standards/resource-indicators/`, type:'primer', tags:['OAuth'], updated_at:'2025-09-01' },
    { id:'primer-authzen', title:'AuthZEN Primer', summary:'OpenID Authorization API concepts with examples.', href:`${base}resources/standards/authzen/`, type:'primer', tags:['AuthZEN','OAuth'], updated_at:'2025-09-01', featured:true },
    { id:'primer-mcp', title:'MCP Primer', summary:'Model Context Protocol basics for tool invocation.', href:`${base}resources/standards/mcp/`, type:'primer', tags:['MCP'], updated_at:'2025-09-10', featured:true },
    // Demos/Notes/Cases
    { id:'demo-mcp', title:'MCP Gateway Demo', summary:'Pre-exec plan validation and schema pins in action.', href:`${base}products/gateway/`, type:'demo', tags:['MCP','Budgets'], updated_at:'2025-08-28', duration:'3:12', featured:true },
    { id:'roi-calc', title:'ROI Calculator', summary:'Estimate DIY vs EmpowerNow year-one costs.', href:`${base}`, type:'roi', tags:['ROI','Budgets'], updated_at:'2025-09-15', featured:true },
    { id:'note-zero-token', title:'Zero-Token SPA Guide', summary:'How to eliminate tokens in the browser.', href:`${base}solutions/zero-token-spas/`, type:'note', tags:['OAuth','DPoP'], updated_at:'2025-07-12' },
    { id:'case-brief', title:'Program Brief', summary:'Business outcomes and platform adoption path.', href:`${base}resources/case-studies/`, type:'case', tags:['Case'], updated_at:'2025-06-05' }
];
---
<Base title={title} description={description} canonical={canonical}>
    <!-- Hero with Global Search (full-bleed stage, content container inside) -->
    <section class="hero-plate page-stage" style={`padding:160px 0 64px;background-image:url(${base}images/backgrounds/bg-homepage-hero.jpg);background-size:cover;background-position:center;background-repeat:no-repeat;position:relative;content-visibility:auto;contain-intrinsic-size: 600px`}>
        <div class="container" style="position:relative;z-index:1">
			<!-- Breadcrumb/eyebrow intentionally omitted to match other hero sections -->
			<h1 class="display" style="margin:0 0 8px">Resources</h1>
            <p class="body" style="color:#9db4cf;max-width:860px;margin:6px 0 20px">Standards primers, demos, and helpful links.</p>
			<div style="max-width:640px">
                <!-- <label for="gsearch" class="sr-only">Search resources</label> -->
                <div style="padding:10px;border-radius:12px;display:flex;align-items:center;gap:10px;border:1px solid rgba(255,255,255,.22);background:rgba(8,15,30,.52);box-shadow:inset 0 0 0 1px rgba(255,255,255,.03);backdrop-filter:saturate(120%) blur(6px)">
                    <input id="gsearch" type="search" placeholder="Search resources…" aria-label="Search resources" style="flex:1;min-width:120px;background:transparent;border:0;outline:none;color:var(--on-bg);font:400 16px/1.5 Inter, ui-sans-serif" />
                    <button id="gsubmit" class="btn" style="margin-top:-1px">Search</button>
                </div>
				<ul id="gsuggestions" role="listbox" aria-label="Search suggestions" style="margin:6px 0 0;padding:0;list-style:none;display:none;max-height:280px;overflow:auto;border:1px solid rgba(255,255,255,.08);border-radius:12px;background:rgba(8,15,30,.4)"></ul>
				<div id="gskel" style="display:none;margin-top:6px;padding:8px;border:1px solid rgba(255,255,255,.08);border-radius:12px;background:rgba(8,15,30,.4)">
					<div class="skeleton" style="height:14px;margin:6px 0"></div>
					<div class="skeleton" style="height:14px;margin:6px 0"></div>
					<div class="skeleton" style="height:14px;margin:6px 0"></div>
					<div class="skeleton" style="height:14px;margin:6px 0"></div>
				</div>
            </div>
        </div>
    </section>

    <!-- Featured Row -->
    <section class="container" style="padding:24px 0 8px;content-visibility:auto">
        <h2 style="font-size:28px;margin:0 0 12px;color:#f0f4f8">Featured</h2>
        <div class="featured-grid" style="display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:16px">
            {allResources.filter(r=>r.featured).slice(0,6).map(r => (
                <a href={r.href} class="gradient-card hover-rise" data-ev="resources_tile_click" data-label={r.id} aria-label="Open resource">
                    <div class="gradient-card__inner card-tight">
                        <div style="display:flex;justify-content:space-between;align-items:center;gap:8px">
                            <h3 style="margin:0;color:#f7fbff;font-size:18px">{r.title}</h3>
                            <span class="chev" aria-hidden="true" style="font-size:18px">→</span>
                        </div>
                        <p style="margin:6px 0 0;color:#9db4cf;font-size:14px">{r.summary}</p>
                    </div>
				</a>
			))}
		</div>
	</section>

    <!-- Collections Grid -->
    <section class="container" style="padding:24px 0;content-visibility:auto">
        <h2 style="font-size:28px;margin:0 0 12px;color:#f0f4f8">Collections</h2>
        <div style="display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:20px" class="collections-grid">
            {collections.map(c => (
                <a href={c.href} class="gradient-card hover-rise" data-ev="resources_tile_click" data-label={"col_" + c.id} aria-label="Open collection">
                    <div class="gradient-card__inner card-tight">
                        <div style="display:flex;justify-content:space-between;align-items:center;gap:8px">
                            <h3 style="margin:0;color:#fff;font-size:20px">{c.title}</h3>
                            <span class="chev" aria-hidden="true">→</span>
                        </div>
                        <p style="margin:6px 0 0;color:#9db4cf">{c.description}</p>
                    </div>
                </a>
            ))}
        </div>
        <style>
            .gradient-card{ border-radius:16px; padding:1px; background:linear-gradient(var(--panel), var(--panel)) padding-box, linear-gradient(45deg, var(--pulse-cyan), var(--quantum-violet)) border-box; display:block; text-decoration:none; color:inherit }
            .gradient-card__inner{ background:var(--panel); border-radius:16px; padding:24px; display:flex; flex-direction:column; min-height:110px; box-shadow: 0 0 0 1px rgba(255,255,255,.04) inset, 0 8px 24px rgba(0,0,0,.25) }
            .card-tight h3{ line-height:1.2 }
            .card-tight p{ line-height:1.5 }
            .gradient-card:hover .chev{ transform: translateX(4px) }
            .chev{ transition: transform .15s ease }
            @media (min-width: 1024px){ .collections-grid{ gap:24px } .featured-grid{ gap:24px } }
        </style>
        <script>
            // Section impression analytics
            (function(){
                const dnt = (navigator).doNotTrack==='1' || (window).doNotTrack==='1';
                if(dnt) return;
                const dl = (window).dataLayer = (window).dataLayer || [];
                function observeOnce(el, name){
                    const io = new IntersectionObserver((entries)=>{
                        entries.forEach(e=>{ if(e.isIntersecting){ dl.push({event:'resources_section_view', section:name}); io.disconnect(); } });
                    }, { threshold:.4 });
                    io.observe(el);
                }
                const featured = document.querySelector('.featured-grid');
                const collections = document.querySelector('.collections-grid');
                featured && observeOnce(featured, 'featured');
                collections && observeOnce(collections, 'collections');
            })();
        </script>
    </section>

    <!-- All Resources with Filters -->
    <section class="container" style="padding:24px 0;content-visibility:auto">
        <nav aria-label="Filters" id="filters" class="glass-card" style="position:sticky;top:56px;z-index:10;padding:10px;display:flex;gap:8px;flex-wrap:wrap;align-items:center;overflow:auto;scrollbar-width:none">
            <input id="fsearch" type="search" placeholder="Search within resources…" aria-label="Search within resources" style="flex:1;min-width:180px;background:transparent;border:1px solid var(--border-strong);border-radius:10px;padding:8px;color:var(--on-bg)" />
            <div id="type-pills" style="display:flex;gap:6px;flex-wrap:wrap">
                <button class="pill" data-type="primer">Primers</button>
                <button class="pill" data-type="demo">Demos</button>
                <button class="pill" data-type="template">Templates</button>
                <button class="pill" data-type="roi">ROI/Proof</button>
                <button class="pill" data-type="case">Case Studies</button>
                <button class="pill" data-type="note">Notes</button>
            </div>
            <div id="tag-chips" style="display:flex;gap:6px;flex-wrap:wrap">
                {['AuthZEN','OIDC','MCP','SCIM','CAEP','Budgets','Content/Egress'].map(t => (
                    <button class="chip" data-chip={t}>{t}</button>
                ))}
            </div>
        </nav>
		<ul id="res-list" style="list-style:none;margin:12px 0 0;padding:0;display:grid;grid-template-columns:repeat(1,minmax(0,1fr));gap:12px"></ul>
		<div id="res-skel" class="glass-card" style="padding:12px;margin-top:8px;display:none">
			<div class="skeleton" style="height:14px;margin:6px 0"></div>
			<div class="skeleton" style="height:14px;margin:6px 0"></div>
			<div class="skeleton" style="height:14px;margin:6px 0"></div>
		</div>
        <div id="empty" class="glass-card" style="display:none;padding:16px;color:#9db4cf">No results. Try <a href={`${base}resources/standards/`}>Standards</a> or <a href={`${base}search/`}>site search</a>.</div>
        <style>
            .pill{ padding:6px 10px; border-radius:999px; border:1px solid rgba(255,255,255,.18); background:transparent; color:var(--on-bg) }
            .pill.active{ background:rgba(0,229,255,.12); border-color:rgba(0,229,255,.55); color:#b9f6ff }
            #res-list .item{ display:block; text-decoration:none; color:inherit }
			#filters{ -ms-overflow-style: none; }
			#filters::-webkit-scrollbar{ display:none }
			.skeleton{ background:linear-gradient(90deg, rgba(255,255,255,.04), rgba(255,255,255,.08), rgba(255,255,255,.04)); background-size:200% 100%; animation:shimmer 1.2s infinite; border-radius:6px }
			@keyframes shimmer{ 0%{ background-position:200% 0 } 100%{ background-position:-200% 0 } }
        </style>
    </section>

    <!-- CTA Footer -->
    <section class="container surface-2" style="padding:40px 0 80px;border-radius:12px;text-align:center;content-visibility:auto">
        <h2 style="margin:0 0 10px;font-size:32px">Ready to try it?</h2>
        <div style="display:flex;gap:10px;flex-wrap:wrap;justify-content:center">
            <a class="btn btn-primary" data-ev="cta_click" data-label="quickstart_resources" href={`https://empowerid.github.io/empowernow_docs/docs/services/crud-service/how-to/mcp-quickstart/`}>Open Quickstart</a>
            <a class="btn" data-ev="cta_click" data-label="docs_resources" href="https://empowerid.github.io/empowernow_docs/">View Docs</a>
            <a class="btn" data-ev="cta_click" data-label="book_demo_resources" href={`${base}demo/`}>Book 15‑min Demo</a>
        </div>
    </section>

    <script define:vars={{ allResources, base }}>
    (()=>{
        // Utilities
        const dnt = (navigator).doNotTrack==='1' || (window).doNotTrack==='1';
        function pl(ev){ if(dnt) return; (window).dataLayer=(window).dataLayer||[]; (window).dataLayer.push(ev); }
        const qsel = (s)=> document.querySelector(s);

        // Hero global search with suggestions
		const gi = qsel('#gsearch');
		const gs = qsel('#gsuggestions');
		const gsk = qsel('#gskel');
        const sb = qsel('#gsubmit');
        let sTimer=0; let activeIndex=-1;
        function buildSuggestionsNow(term){
            const t = (term||'').trim().toLowerCase();
            if(!t){ gs.style.display='none'; gs.innerHTML=''; return; }
            const pool = allResources.slice(0,50);
            const matches = pool.filter(r=> (r.title+" "+r.summary+" "+r.tags.join(' ')).toLowerCase().includes(t)).slice(0,8);
            gs.innerHTML = matches.map((r,i)=> `<li role="option" id="opt-${i}" aria-selected="${i===0}"><a href="${r.href}" class="item glass-card" data-ev="resources_tile_click" data-label="${r.id}" style="display:block;padding:8px 10px;color:inherit;text-decoration:none">${r.title}<span style='color:#9db4cf'> — ${r.summary}</span></a></li>`).join('');
            activeIndex = matches.length?0:-1;
            gs.style.display = matches.length ? 'block' : 'none';
            gsk && (gsk.style.display = 'none');
            gi && gi.setAttribute('aria-expanded', matches.length? 'true' : 'false');
            if(matches.length){ gi && gi.setAttribute('aria-activedescendant', 'opt-0'); } else { gi && gi.removeAttribute('aria-activedescendant'); }
        }
        function buildSuggestions(term){ clearTimeout(sTimer); sTimer = window.setTimeout(()=> buildSuggestionsNow(term), 250); }
        gi && gi.addEventListener('input', ()=> { if(gi.value && gi.value.trim()){ gsk && (gsk.style.display='block'); gs && (gs.style.display='none'); } buildSuggestions(gi.value); });
        gi && gi.addEventListener('keydown', (e)=>{
            const items = Array.from(gs?.querySelectorAll('li')||[]);
            if(e.key==='ArrowDown'){ e.preventDefault(); if(items.length){ activeIndex = (activeIndex+1)%items.length; items.forEach((li,i)=> li.setAttribute('aria-selected', String(i===activeIndex))); liFocus(); } }
            else if(e.key==='ArrowUp'){ e.preventDefault(); if(items.length){ activeIndex = (activeIndex-1+items.length)%items.length; items.forEach((li,i)=> li.setAttribute('aria-selected', String(i===activeIndex))); liFocus(); } }
            else if(e.key==='Escape'){ gs.style.display='none'; gi && gi.setAttribute('aria-expanded','false'); gi && gi.removeAttribute('aria-activedescendant'); }
            else if(e.key==='Enter'){
                e.preventDefault();
                const term=(gi.value||'').trim();
                pl({event:'resources_search', term, results_count: (gs?.children?.length||0)});
                if(activeIndex>=0 && items[activeIndex]){ const a = items[activeIndex].querySelector('a'); if(a && a.click){ a.click(); return; } }
                location.href = `${base}search/?q=`+encodeURIComponent(term);
            }
            function liFocus(){ const it = items[activeIndex]; const anchor = it && it.querySelector('a'); if(anchor && anchor.focus){ anchor.focus(); } gi && gi.setAttribute('aria-activedescendant', `opt-${activeIndex}`); }
        });
        sb && sb.addEventListener('click', ()=>{ const term=(gi?.value||'').trim(); pl({event:'resources_search', term, results_count: (gs?.children?.length||0)}); location.href = `${base}search/?q=`+encodeURIComponent(term); });

        // All resources list with filters
        const list = qsel('#res-list');
        const empty = qsel('#empty');
		const fs = qsel('#fsearch');
		const rsk = qsel('#res-skel');
        const typePills = Array.from(document.querySelectorAll('#type-pills .pill'));
        const tagChips = Array.from(document.querySelectorAll('#tag-chips .chip'));
        const state = { term:'', types:new Set(), tags:new Set() };

        function syncURL(){
            const u = new URL(location.href);
            u.searchParams.delete('type'); u.searchParams.delete('tag'); u.searchParams.delete('q');
            if(state.term) u.searchParams.set('q', state.term);
            state.types.forEach(t=> u.searchParams.append('type', t));
            state.tags.forEach(t=> u.searchParams.append('tag', t));
            history.replaceState(null,'', u.pathname + (u.search?u.search:'') + (u.hash||''));
        }

		function render(){
            const term = state.term.toLowerCase();
            const out = allResources.filter(r=> {
                if(state.types.size && !state.types.has(r.type)) return false;
                if(state.tags.size && !r.tags.some(t=> state.tags.has(t))) return false;
                if(term && !(r.title+" "+r.summary+" "+r.tags.join(' ')).toLowerCase().includes(term)) return false;
                return true;
            });
            if(!list) return;
            rsk && (rsk.style.display='none');
            list.innerHTML = out.map(r=>{
                const date = new Date(r.updated_at).toLocaleDateString();
                const typeLabel = r.type.toUpperCase();
                const tagStr = r.tags.map(t=> `<span class='chip' style='margin-right:6px'>${t}</span>`).join('');
                const dur = r.duration? ` • ${r.duration}`:'';
                return `<li class='glass-card' style='padding:12px'>
                    <a class='item' href='${r.href}' data-ev='resources_tile_click' data-label='${r.id}'>
                        <div style='display:flex;justify-content:space-between;gap:8px;align-items:center'>
                            <div>
                                <div class='meta' style='opacity:.9'>${typeLabel}${dur}</div>
                                <div style='font-weight:600;margin:2px 0'>${r.title}</div>
                                <div style='color:#9db4cf'>${r.summary}</div>
                                <div style='margin-top:6px'>${tagStr}</div>
                            </div>
                            <div class='meta' style='color:#9db4cf;white-space:nowrap'>Updated ${date}</div>
                        </div>
                    </a>
                </li>`;
            }).join('');
            if(empty){ empty.style.display = out.length? 'none':'block'; }
        }

        function applyType(t){
            if(state.types.has(t)) state.types.delete(t); else state.types.add(t);
            pl({event:'resources_filter_apply', type:t});
            typePills.forEach(p=> p.classList.toggle('active', state.types.has(p.getAttribute('data-type'))));
            syncURL(); render();
        }
        function applyTag(t){
            if(state.tags.has(t)) state.tags.delete(t); else state.tags.add(t);
            pl({event:'resources_filter_apply', tag:t});
            const btn = tagChips.find(b=> b.getAttribute('data-chip')===t); btn && btn.classList.toggle('chip--success', state.tags.has(t));
            syncURL(); render();
        }
        typePills.forEach(p=> p.addEventListener('click', ()=> applyType(p.getAttribute('data-type'))));
        tagChips.forEach(b=> b.addEventListener('click', ()=> applyTag(b.getAttribute('data-chip'))));
        let fTimer=0;
        fs && fs.addEventListener('input', ()=> { rsk && (rsk.style.display='block'); state.term = fs.value; clearTimeout(fTimer); fTimer = window.setTimeout(()=> { render(); syncURL(); }, 250); });

        // Initialize from URL
        try{
            const u = new URL(location.href);
            const q = u.searchParams.get('q')||''; if(q && fs){ fs.value=q; state.term=q; }
            u.searchParams.getAll('type').forEach(t=> state.types.add(t));
            u.searchParams.getAll('tag').forEach(t=> state.tags.add(t));
        }catch{}
        typePills.forEach(p=> p.classList.toggle('active', state.types.has(p.getAttribute('data-type'))));
        tagChips.forEach(b=> b.classList.toggle('chip--success', state.tags.has(b.getAttribute('data-chip'))));
        render();
    })();
    </script>
</Base>