---
import Base from '../../layouts/Base.astro';
import Product from '../../layouts/Product.astro';
import JsonLd from '../../components/JsonLd.astro';
const title = 'Authentication Studio | EmpowerNow';
const description = 'Bind agents to users and capture consent up front. Issue purpose-bound Agent Passports (OAuth TE + RAR + optional DPoP) with obligations enforced downstream.';
const canonical = '/products/idp/';
const jsonLdProduct = {"@context":"https://schema.org","@type":"Product","name":"IdP","brand":{"@type":"Brand","name":"EmpowerNow"},"description":description,"url":new URL(canonical, Astro.site)};
---
<Base title={title} description={description} canonical={canonical}>
	<JsonLd data={jsonLdProduct} />
    <Product title={title} description={description} canonical={canonical} productKey="idp" productIcon="üîê" eyebrow="üîê AUTHENTICATION STUDIO" headline="Authentication Studio" subhead="Bind agents to users and capture consent up front." targetICP={[ 'Platform Teams', 'Security', 'Compliance' ]} keyBenefits={[ 'Strong agent‚Üíuser binding with purpose scope', 'Pre‚Äëissuance consent & obligations', 'Budget envelopes enforced downstream', 'Optional DPoP (proof-of-possession)' ]} primaryCTA={{ label: 'Book demo', href: `${import.meta.env.BASE_URL}demo/` }} secondaryCTA={{ label: 'Read docs', href: 'https://empowerid.github.io/empowernow_docs/docs/services/idp/' }} tertiaryCTA={{ label: 'Quickstart', href: `${import.meta.env.BASE_URL}docs/` }} docsLinks={[ { href: 'https://empowerid.github.io/empowernow_docs/docs/services/idp/', label: 'IdP Docs' } ]} wwwLinks={[ { href: '/solutions/agent-safe-tools/', label: 'Agent-Safe Tools' } ]} keywords={[ 'oauth te','rar','dpop','oidc','scim','caep' ]}>
        <fragment slot="standards">
            <div class="status-row">
                <span class="chip chip--outline-cyan">OAuth TE</span>
                <span class="chip chip--outline-cyan">RAR</span>
                <span class="chip chip--outline-cyan">DPoP</span>
                <span class="chip chip--outline-cyan">OIDC</span>
                <span class="chip chip--outline-cyan">SCIM</span>
                <span class="chip chip--outline-cyan">CAEP</span>
            </div>
        </fragment>
        <fragment slot="examples">
            <div class="card-grid">
                <div class="ns-card"><h3>GitHub Admin Passport</h3><p>Scope + step‚Äëup enforced.</p></div>
                <div class="ns-card"><h3>Copilot delegated action</h3><p>Consent before issuance.</p></div>
            </div>
        </fragment>
		<fragment slot="how">
			<section class="container" style="padding:8px 0 24px">
				<h2 class="section-title">How it works</h2>
				<p style="color:#9ba3b7">Users grant consent at issuance time; obligations are carried on the ARIA Passport and enforced by Gateway and BFF.</p>
			</section>
			<section class="container" style="padding:8px 0 24px">
				<h2 class="section-title">Using External IdPs with EmpowerNow</h2>
				<p style="color:#9ba3b7">Federate to your corporate IdP (Microsoft Entra ID, Okta, Auth0) for login, then complete OAuth/OIDC locally so you retain control of token issuance, claims, and policy.</p>
				<h3>Use cases</h3>
				<ul>
					<li>Standardize tokens across apps while using the corporate IdP for login</li>
					<li>Migrate or multi‚ÄëIdP with a unified claims contract</li>
					<li>Step‚Äëup and consent based on risk/policy‚Äîeven after upstream auth</li>
					<li>Fine‚Äëgrained API authorization with consistent scopes/claims</li>
					<li>Developer tokens and introspection alongside JWTs</li>
				</ul>
				<h3>Federate but orchestrate</h3>
				<ul>
					<li>Redirect to upstream for login; return and orchestrate locally</li>
					<li>Apply obligations (step‚Äëup MFA, consent, risk) and bind sessions</li>
					<li>Outcome parity with ‚Äúauthentication actions‚Äù via policy‚Äëdriven rules</li>
				</ul>
				<h3>Collaborative adaptive authentication</h3>
				<ul>
					<li>Normalize upstream attributes to canonical claims; decide locally</li>
					<li>Emit identity events for analytics and adaptive posture</li>
				</ul>
				<h3>OAuth/OIDC features</h3>
				<p style="color:#9ba3b7">Auth Code + PKCE, Refresh, Client Credentials, Introspection. Optional: PAR, JARM‚Äëstyle JWT responses, CIBA, DPoP, RFC 8693 Token Exchange, JWE/JWS. Discovery advertises supported grants/algorithms; middleware can enforce FAPI‚Äëstyle rigor.</p>
				<h3>Minimal RAR object</h3>
				<pre class="glass-card" style="padding:12px;overflow:auto"><code>{`
{
  "authorization_details": [
    {
      "type": "tool",
      "actions": ["invoke"],
      "resource": "billing.export",
      "locations": ["https://api.example.com"],
      "dat": { "purpose": "monthly_report" }
    }
  ]
}
`}</code></pre>
				<h3>Claims & scopes</h3>
				<ul>
					<li>Canonical identity‚Äëfirst claims with provenance (`orig_iss`, `orig_sub`)</li>
					<li>Composable claims merged from upstream + internal sources</li>
					<li>Per‚Äëclient customization without leaking provider specifics</li>
					<li>Introspection parity for local/external tokens</li>
				</ul>
				<h3>Architecture at a glance</h3>
				<ol>
					<li>Login at corporate IdP ‚Üí return to EmpowerNow</li>
					<li>Orchestrate obligations and assurances</li>
					<li>Issue policy‚Äëcontrolled tokens / introspection with canonical claims</li>
					<li>Enforce with PDP/services; analytics feed adaptive auth</li>
				</ol>
				<h3>Getting started</h3>
				<ol>
					<li>Configure upstream provider (discovery/JWKS, redirect URIs)</li>
					<li>Enable federation and mapping</li>
					<li>Define canonical claims and any internal sources</li>
					<li>Enable advanced features as required; verify via discovery</li>
					<li>Test end‚Äëto‚Äëend (login, step‚Äëup, issuance, introspection)</li>
				</ol>
			</section>
		</fragment>
	</Product>
    <section class="container" style="padding:8px 0 24px">
        <h2 class="section-title">Compare</h2>
        <div class="glass-card" style="padding:16px;color:#9ba3b7">
            <ul style="margin:0;line-height:1.8">
                <li><strong>Microsoft Entra/Okta/Auth0</strong>: OAuth/OIDC for apps; agent Passports require TE + RAR + chain/pins + receipts ‚Üí <a href="https://learn.microsoft.com/entra/identity-platform/dpop-proof-of-possession">evidence</a></li>
                <li><strong>Keys/Vaults</strong>: rotate/seal keys but no pairwise identity, plan/schema pins, or receipts ‚Üí standards TE/RAR/DPoP close gaps</li>
            </ul>
        </div>
    </section>
</Base>
