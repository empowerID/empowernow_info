---
import Base from '../layouts/Base.astro';
import HeroComposite from '../components/HeroComposite.astro';
import DemoTile from '../components/DemoTile.astro';
import HeroDemoTile from '../components/HeroDemoTile.astro';
import ProofChip from '../components/ProofChip.astro';
import StatusPills from '../components/StatusPills.astro';
import CodeCard from '../components/CodeCard.astro';
import ComparisonTable from '../components/ComparisonTable.astro';
import Passport from '../components/icons/Passport.astro';
import AuthZEN from '../components/icons/AuthZEN.astro';
import PinPlan from '../components/icons/PinPlan.astro';
import SavingsCalculator from '../components/SavingsCalculator.astro';
---
<Base title="EmpowerNow — Universal Agent Governance & Integration Layer" description="Create tools once. Enforce policy & spend controls across agent platforms, and prove every action with cryptographic receipts." canonical="/">
    <!-- Hero -->
    <section class="hero-plate page-stage" data-section="hero" style="padding:120px 0 64px">
        <div class="container" style="display:flex;gap:48px;align-items:center;flex-wrap:wrap">
            <div style="flex:1 1 520px;min-width:300px">
                <h1 class="display" style="margin:0 0 10px;background:linear-gradient(90deg,var(--quantum-violet),var(--pulse-cyan));-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;line-height:1.2">Create tools once. Enforce policy everywhere. <span style="font-size:1.15em">Prove every action.</span></h1>
                <p style="color:#9ba3b7;max-width:70ch;margin:0 0 24px;line-height:1.5">No‑code tools for any agent platform with <strong>budget & content controls</strong> and <strong>cryptographic receipts</strong>.</p>
                <div style="display:flex;gap:12px;flex-wrap:wrap;margin-bottom:20px">
                    <a class="btn btn-primary" data-ev="cta_click" data-label="watch_demo" data-position="hero" href={`${import.meta.env.BASE_URL}resources/demo/`}>Watch 90‑second demo</a>
                    <a class="btn btn-ghost" data-ev="cta_click" data-label="quickstart" data-position="hero" href={`${import.meta.env.BASE_URL}docs/crud-service/quickstart`}>Open Quickstart</a>
                </div>
                <div class="hero-proof-chips" style="display:flex;flex-direction:column;gap:8px;color:#9ba3b7">
                    <ProofChip label="Author once → MCP / Functions / Copilot" icon="author" />
                    <ProofChip label="Budget 402 & content/egress deny" icon="budget" />
                    <ProofChip label="Receipts auditors accept" icon="receipt" />
                </div>
            </div>
            <div class="parallax-glow" style="flex:1 1 420px;min-width:280px">
                <HeroDemoTile poster={`${import.meta.env.BASE_URL}images/hero-poster.png`} sources={[{src:`${import.meta.env.BASE_URL}media/hero-demo.webm`,type:'video/webm'},{src:`${import.meta.env.BASE_URL}media/hero-demo.mp4`,type:'video/mp4'}]} captions={`${import.meta.env.BASE_URL}media/hero-demo.vtt`} demoUrl={`${import.meta.env.BASE_URL}resources/demo/`} />
            </div>
        </div>
    </section>
    <style>
        .hero-proof-chips .chip {
            border: none !important;
            background: transparent;
            padding: 0;
        }
    </style>
    <!-- JSON-LD -->
    <script type="application/ld+json">
    {JSON.stringify({
        '@context':'https://schema.org',
        '@type':'Organization',
        name:'EmpowerNow',
        url: new URL(`${import.meta.env.BASE_URL}`, Astro.site).toString(),
        logo: new URL(`${import.meta.env.BASE_URL}images/en-logo-dark.png`, Astro.site).toString(),
        sameAs:[
            'https://github.com/empowerID',
            'https://www.linkedin.com/company/empowerid/'
        ]
    })}
    </script>
    <script type="application/ld+json">
    {JSON.stringify({
        '@context':'https://schema.org',
        '@type':'Product',
        name:'EmpowerNow Platform',
        brand:{ '@type':'Brand', name:'EmpowerNow' },
        description:'Universal Agent Governance & Integration Layer — Create tools once. Enforce policy & spend controls across agent platforms, and prove every action with cryptographic receipts.',
        offers:{ '@type':'Offer', priceCurrency:'USD', price:'500', priceSpecification:{ '@type':'UnitPriceSpecification', priceCurrency:'USD', price:'500', unitText:'per governed endpoint / month' } }
    })}
    </script>
    <script type="application/ld+json">
    {JSON.stringify({
        '@context':'https://schema.org',
        '@type':'FAQPage',
        mainEntity:[
            {
                '@type':'Question',
                name:'How fast can I create a tool?',
                acceptedAnswer:{ '@type':'Answer', text:'Under 10 minutes using CRUD Service; publish once to MCP, Copilot, Functions.' }
            },
            {
                '@type':'Question',
                name:'How do you control spend?',
                acceptedAnswer:{ '@type':'Answer', text:'Budgets and per-route caps with 402 pre-execution blocks and usage attribution.' }
            },
            {
                '@type':'Question',
                name:'What audit evidence is produced?',
                acceptedAnswer:{ '@type':'Answer', text:'Signed, hash-chained receipts with decision context, policy hash, schema hash, and cost.' }
            }
        ]
    })}
    </script>
    <!-- Trust strip -->
    <section class="container" data-section="trust" style="padding:12px 0 12px">
        <div class="panel-glass trust-strip" style="padding:12px;color:#9ba3b7">
            <span>Built by <strong>EmpowerID</strong> (since 2005, $20M+ revenue; Airbus, Aldi, Daimler Truck, Siemens, RB, PACCAR).</span>
            <span>•</span>
            <span><strong>Neutral by design</strong> — OEM/white‑label with any IGA/PAM and any agent platform.</span>
            <a class="btn" href={`${import.meta.env.BASE_URL}company/built-by-empowerid/`}>Learn more</a>
        </div>
    </section>
	<script>
		if (matchMedia('(hover:hover) and (pointer:fine) and (min-width:1024px)').matches) {
			const root = document.querySelector('.parallax-glow');
			if (root) {
				document.addEventListener('mousemove', (e) => {
					const r = root.getBoundingClientRect();
					const mx = e.clientX - (r.left + r.width/2);
					const my = e.clientY - (r.top + r.height/2);
					(root as HTMLElement).style.setProperty('--mx', mx + 'px');
					(root as HTMLElement).style.setProperty('--my', my + 'px');
				});
			}
		}
	</script>
    <!-- Platform coverage -->
    <section class="container" data-section="platforms" style="padding:8px 0 12px">
        <div style="margin:6px 0;display:flex;gap:8px;flex-wrap:wrap;color:#9ba3b7">
            <span class="chip">Anthropic MCP</span><span class="chip">OpenAI Functions</span><span class="chip">Microsoft Copilot</span><span class="chip">Google Vertex</span><span class="chip">AWS Bedrock</span><span class="chip">LangChain</span>
        </div>
        <div class="block-ghost" style="padding-top:10px">
            <StatusPills items={["MCP GA","OpenAI Testing","Copilot Design","Demo Active","Docs Complete","First tool <10m","Publish to 3 <1h"]} />
        </div>
    </section>
    <section class="container" data-section="diff-grid" style="padding:24px 0">
        <div class="glass-card" style="padding:20px">
            <h2 style="font-size:36px;margin:0 0 10px">How we’re different</h2>
            <ComparisonTable rows={[
                { need:'Working tools today', others:'“Coming soon” or DIY', us:`<a class=\"btn\" data-ev=\"table_action_click\" data-action=\"create_tool\" href=\"${import.meta.env.BASE_URL}products/crud/\">Create a tool in &lt;10 min</a>` },
                { need:'Cross‑platform enforcement', others:'Logs/observability', us:'Pre‑exec pins + runtime budgets/egress' },
                { need:'Standardized decisions', others:'App‑specific rules', us:'OpenID AuthZEN (constraints/obligations/TTL)' },
                { need:'Proof for audit & FinOps', others:'Unstructured logs', us:'Cryptographic receipts (decision/policy/schema/cost)' },
                { need:'Identity propagation', others:'Ad‑hoc JWT passing', us:'OAuth 2.1 + RFC 8693 Token Exchange' }
            ]} />
        </div>
    </section>
    <section class="container" data-section="neutral" style="padding:8px 0 24px">
        <div class="glass-card" style="padding:16px;display:flex;gap:12px;flex-wrap:wrap;align-items:center;justify-content:center;color:#9ba3b7">
            <span class="chip chip--outline-cyan">Neutral by design</span>
            <span class="chip chip--outline-violet">OEM/white‑label friendly</span>
            <a class="btn" href={`${import.meta.env.BASE_URL}company/why-neutral/`}>Why neutral →</a>
        </div>
    </section>
	<div class="section-divider"></div>
    <section class="container surface-2 reveal-on-scroll cv-auto" data-section="outcomes" style="padding:40px 0;border-radius:12px">
        <div style="text-align:center;margin-bottom:24px">
            <h2 style="font-size:42px;margin:0 0 6px">Outcomes that matter</h2>
            <p style="color:#B3BCD2;max-width:760px;margin:0 auto">Audit you can prove. Spend you can control. Ship with confidence.</p>
        </div>
        <div style="display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:24px">
            <div class="panel-glow hover-rise" style="padding:24px">
                <div class="product-rail rail--receipts" aria-hidden="true"></div>
                <h3 style="margin:0 0 8px;display:flex;align-items:center;gap:8px"><span class="chip">AI you can audit</span></h3>
                <ul style="margin:0;color:#9ba3b7;line-height:1.7;padding-left:18px">
                    <li>Authorization on every request</li>
                    <li>Guardrails for egress/content</li>
                    <li>Signed, hash‑chained receipts</li>
                </ul>
            </div>
            <div class="panel-glow hover-rise" style="padding:24px">
                <div class="product-rail rail--gateway" aria-hidden="true"></div>
                <h3 style="margin:0 0 8px;display:flex;align-items:center;gap:8px"><span class="chip">Spend under control</span></h3>
                <ul style="margin:0;color:#9ba3b7;line-height:1.7;padding-left:18px">
                    <li>Budgets and per‑route caps</li>
                    <li>Over‑cap returns 402 (pre‑exec)</li>
                    <li>Usage by model, tool, team</li>
                </ul>
            </div>
            <div class="panel-glow hover-rise" style="padding:24px">
                <div class="product-rail rail--pdp" aria-hidden="true"></div>
                <h3 style="margin:0 0 8px;display:flex;align-items:center;gap:8px"><span class="chip">Ship with confidence</span></h3>
                <ul style="margin:0;color:#9ba3b7;line-height:1.7;padding-left:18px">
                    <li>Config‑as‑code, PR‑gated</li>
                    <li>SaaS, private cloud, self‑host</li>
                    <li>Adopt incrementally</li>
                </ul>
            </div>
        </div>
    </section>
    <div class="section-divider"></div>
    <section class="container reveal-on-scroll" data-section="tool-factory" style="padding:24px 0">
        <div class="glass-card" style="padding:20px">
            <div style="display:flex;align-items:center;justify-content:space-between;gap:16px;flex-wrap:wrap">
                <div>
                    <h2 style="font-size:36px;margin:0 0 6px">Turn any API/DB into an agent‑safe tool — no code</h2>
                    <p style="color:#9ba3b7;max-width:760px;margin:0">Paste an endpoint, get an MCP‑ready tool with schema pins and policy hooks. Publish once to MCP / Copilot / Functions.</p>
                </div>
                <div style="display:flex;gap:10px;flex-wrap:wrap">
                    <a class="btn btn-primary" data-ev="cta_click" data-label="tf-quickstart" data-position="tool-factory" href={`${import.meta.env.BASE_URL}products/crud/`}>Quickstart</a>
                    <a class="btn" data-ev="cta_click" data-label="tf-adapters" data-position="tool-factory" href={`${import.meta.env.BASE_URL}resources/research/`}>Adapter catalog</a>
                    <a class="btn" data-ev="cta_click" data-label="tf-examples" data-position="tool-factory" href={`${import.meta.env.BASE_URL}resources/`}>Workflow examples</a>
                </div>
            </div>
        </div>
    </section>
    <!-- How it works -->
    <section class="container reveal-on-scroll cv-auto" data-section="how-it-works" style="padding:8px 0 24px">
        <div class="glass-card" style="padding:20px;display:grid;grid-template-columns:1fr 1fr;gap:16px;align-items:start">
            <div>
                <h2 style="font-size:36px;margin:0 0 6px">Author once → Enforce → Prove</h2>
                <ul style="margin:10px 0 0 18px;color:#9ba3b7;line-height:1.8">
                    <li><strong>Author once</strong> in Automation Studio → publish to <strong>MCP/Functions/Copilot</strong></li>
                    <li><strong>Enforce</strong> budgets (402), content & egress with Authorization Studio + Gateway/Shield</li>
                    <li><strong>Prove</strong> with a signed <strong>Receipt</strong> (decision, policy snapshot, schema pin)</li>
                </ul>
            </div>
            <div style="display:grid;gap:12px">
                <CodeCard title="Blocked call (budget)" variant="402" code={`HTTP/1.1 402 Budget Required\nerror: "budget_exceeded"\ncall_id: "abc-123"`} meta="Label: Test Environment — Production Format" />
                <CodeCard title="Receipt (6 lines)" variant="receipt" code={`{ "decision_id":"d-9f2",\n  "policy_hash":"…a1c",\n  "tool_schema_hash":"…7b9",\n  "cost_usd":0.012,\n  "ttl_ms":5000 }`} meta="Label: Test Environment — Production Format" />
            </div>
        </div>
    </section>
    <section class="container section-spine surface-2 reveal-on-scroll cv-auto" data-section="what-you-get" style="padding:40px 0;border-radius:12px">
        <div style="text-align:center;margin-bottom:24px">
            <h2 style="font-size:42px;margin:0 0 6px">What you get</h2>
            <p style="color:#B3BCD2;max-width:760px;margin:0 auto">Five building blocks that interlock. Start with one, or deploy the full fabric as your platform standard.</p>
        </div>
        <div style="display:grid;grid-template-columns:1.2fr 1fr;gap:28px;align-items:center">
            <div>
                <h3 style="margin:0 0 6px;display:flex;align-items:center;gap:10px"><Passport />ARIA Shield (Gateway)</h3>
                <p style="color:#9ba3b7;margin:0 0 14px">One secure front door; allow/deny with reasons; budget checks; no browser tokens.</p>
                <h3 style="margin:16px 0 6px;display:flex;align-items:center;gap:10px"><AuthZEN />Authorization (PDP)</h3>
                <p style="color:#9ba3b7;margin:0">OpenID AuthZEN decisions with constraints, obligations, and TTL.</p>
            </div>
            <div class="glass-card" style="padding:20px;min-height:140px">
                <h3 style="margin:0 0 6px">Authentication (IdP)</h3>
                <p style="color:#9ba3b7;margin:0">Passports via Token Exchange + RAR; pairwise subjects; optional DPoP.</p>
            </div>
        </div>
        <div style="display:grid;grid-template-columns:1fr 1.2fr;gap:28px;align-items:center;margin-top:24px">
            <div class="glass-card" style="padding:20px;min-height:140px">
                <h3 style="margin:0 0 6px">Automation Studio</h3>
                <p style="color:#9ba3b7;margin:0">No‑code MCP tools; per‑run policy; approvals, retries, and receipts.</p>
            </div>
            <div>
                <h3 style="margin:0 0 6px;display:flex;align-items:center;gap:10px"><PinPlan />Inventory</h3>
                <p style="color:#9ba3b7;margin:0">Fresh identity & usage with lineage; feeds PDP PIPs and analytics.</p>
            </div>
        </div>
    </section>
    <section class="container reveal-on-scroll" data-section="journey-band" style="padding:24px 0 8px">
        <div class="glass-card" style="padding:20px;display:flex;gap:12px;flex-wrap:wrap;align-items:center;justify-content:center">
            <strong style="color:#9ba3b7">Create</strong>
            <span class="chip">→</span>
            <a class="btn" href={`${import.meta.env.BASE_URL}products/crud/`}>Automation Studio</a>
            <span class="chip">→</span>
            <strong style="color:#9ba3b7">Decide</strong>
            <span class="chip">→</span>
            <a class="btn" href={`${import.meta.env.BASE_URL}products/pdp/`}>AuthZEN PDP</a>
            <span class="chip">→</span>
            <strong style="color:#9ba3b7">Enforce</strong>
            <span class="chip">→</span>
            <a class="btn" href={`${import.meta.env.BASE_URL}products/gateway/`}>MCP Gateway</a>
            <span class="chip">/</span>
            <a class="btn" href={`${import.meta.env.BASE_URL}products/aria-shield/`}>ARIA Shield</a>
            <span class="chip">→</span>
            <strong style="color:#9ba3b7">Prove</strong>
            <span class="chip">→</span>
            <a class="btn" href={`${import.meta.env.BASE_URL}products/receipts/`}>Receipt Vault</a>
        </div>
    </section>
	<div class="section-divider"></div>
    <!-- Comparison table remains below (accessible) -->
    <section class="container section-spine reveal-on-scroll" data-section="standards" style="padding:40px 0">
		<h2 style="font-size:32px;margin:0 0 12px">Standards & Interop</h2>
        <ul style="color:#9ba3b7;line-height:1.8;margin:0;columns:2;column-gap:24px">
            <li><span class="chip chip--violet chip--spec" data-tip="OpenID Authorization API" style="margin-right:8px">AuthZEN</span> OpenID Authorization API — evaluation endpoints</li>
            <li><span class="chip chip--violet chip--spec" data-tip="Token Exchange (RFC 8693), RAR (RFC 9396), DPoP (RFC 9449)" style="margin-right:8px">OAuth</span> Token Exchange (RFC 8693), RAR (RFC 9396), DPoP (RFC 9449)</li>
            <li><span class="chip chip--cyan" data-tip="Model Context Protocol for agent‑tool calls" style="margin-right:8px">MCP</span> Model Context Protocol for agent‑tool calls</li>
            <li><span class="chip chip--success" data-tip="Signed, hash‑chained receipts" style="margin-right:8px">Receipts</span> Signed, hash‑chained receipts for auditability</li>
		</ul>
        <style>
            .chip[data-tip]{ position:relative }
            .chip[data-tip]:hover::after{ content:attr(data-tip); position:absolute; left:0; top:calc(100% + 6px); white-space:nowrap; background:rgba(0,0,0,.8); color:#e6e6e6; border:1px solid rgba(255,255,255,.15); border-radius:8px; padding:6px 8px; font-size:12px; }
        </style>
	</section>
    <!-- Savings calculator -->
    <section class="container reveal-on-scroll" data-section="calculator" style="padding:24px 0">
        <SavingsCalculator defaultEndpoints={30} defaultPlatforms={2} defaultCost={200000} />
    </section>
    <!-- Pricing teaser -->
    <section class="container" data-section="pricing" style="padding:24px 0">
        <div class="glass-card" style="padding:16px;display:flex;gap:12px;flex-wrap:wrap;align-items:center;justify-content:center">
            <h2 class="section-title" style="margin:0 12px 0 0; font-size:28px">Pricing</h2>
            <div style="color:#9ba3b7">Starting at <strong>$500 / governed endpoint / month</strong> · usage (decisions/receipts) · author seats • OEM revenue share</div>
            <div style="display:flex;gap:10px;flex-wrap:wrap">
                <a class="btn btn-primary" data-ev="table_action_click" data-label="compare_tiers" href={`${import.meta.env.BASE_URL}pricing/`}>Compare tiers</a>
                <a class="btn" href={`${import.meta.env.BASE_URL}contact/`}>Contact sales</a>
            </div>
        </div>
    </section>

    <!-- Primary CTA -->
    <section class="container surface-2 reveal-on-scroll" data-section="cta" style="padding:60px 0 120px;text-align:center;position:relative;border-radius:12px">
		<div style="position:absolute;top:-24px;left:0;right:0;height:1px;background:linear-gradient(90deg, transparent, rgba(0,231,246,.35), transparent)"></div>
        <h2 style="font-size:40px;margin:0 0 12px">Ready to get started?</h2>
        <p style="color:#9ba3b7;max-width:720px;margin:0 auto 20px">Create once → Enforce everywhere → Prove everything.</p>
        <div style="display:flex;gap:12px;justify-content:center;flex-wrap:wrap">
            <a class="btn btn-primary" data-ev="cta_click" data-label="watch_demo" href={`${import.meta.env.BASE_URL}resources/demo/`}>Watch the demo</a>
            <a class="btn btn-ghost" data-ev="cta_click" data-label="quickstart" href={`${import.meta.env.BASE_URL}docs/crud-service/quickstart`}>Open Quickstart</a>
            <a class="btn" data-ev="cta_click" data-label="book_demo" style="border-color:var(--color-accent);color:var(--color-accent);background:transparent" href={`${import.meta.env.BASE_URL}demo/`}>Book a 15‑min demo</a>
            <span class="chip chip--success" style="align-self:center">AA compliant</span>
		</div>
        <div class="glass-card" style="margin:16px auto 0;max-width:880px;padding:12px;display:flex;gap:16px;justify-content:center;flex-wrap:wrap;color:#9ba3b7">
            <div><strong>Receipts/day</strong> <span id="k_receipts">—</span></div>
            <div><strong>Spend blocked (402)</strong> <span id="k_blocked">—</span></div>
            <div><strong>Governed endpoints</strong> <span id="k_endpoints">—</span></div>
        </div>
        <div style="margin-top:12px"><a class="btn" href={`${import.meta.env.BASE_URL}resources/controls-evidence/`}>View Controls & Evidence →</a></div>
	</section>
    <script>
        (function(){
            try{
                const init = () => {
                    if('IntersectionObserver' in window){
                        const els=[...document.querySelectorAll('.reveal-on-scroll')];
                        const io1=new IntersectionObserver((entries)=>{
                            entries.forEach(e=>{ if(e.isIntersecting){ (e.target as HTMLElement).classList.add('is-visible'); io1.unobserve(e.target); } });
                        },{threshold:.25});
                        els.forEach(el=> io1.observe(el));
                    }
                    (window).dataLayer=(window).dataLayer||[];
                    if('IntersectionObserver' in window){
                        const sections=[...document.querySelectorAll('[data-section]')];
                        const t0=new Map();
                        const io2=new IntersectionObserver((entries)=>{
                            entries.forEach(e=>{
                                const id=(e.target as HTMLElement).getAttribute('data-section')||'unknown';
                                if(e.isIntersecting){
                                    const dnt = (navigator as any).doNotTrack==='1' || (window as any).doNotTrack==='1';
                                    if(!dnt){ (window).dataLayer.push({event:'section_view', id}); }
                                    if(!t0.has(id)) t0.set(id, performance.now());
                                } else {
                                    if(t0.has(id)){
                                        const ms=Math.round(performance.now()-t0.get(id));
                                        const dnt = (navigator as any).doNotTrack==='1' || (window as any).doNotTrack==='1';
                                        if(!dnt){ (window).dataLayer.push({event:'section_time', id, ms}); }
                                        t0.delete(id);
                                    }
                                }
                            });
                        },{threshold:.5});
                        sections.forEach(s=> io2.observe(s));
                    }
                };
                if('requestIdleCallback' in window){ (window as any).requestIdleCallback(init); } else { setTimeout(init, 0); }
                function t(n){ return n>=1000 ? (Math.round(n/100)/10)+'k' : String(n); }
                function run(){
                    const raw = localStorage.getItem('marketing_events_jsonl')||'';
                    const lines = raw.split('\n').filter(Boolean).map(l=>{ try{return JSON.parse(l);}catch{return null;}}).filter(Boolean);
                    const receipts = lines.filter(e=>e.event==='receipt').length;
                    const ctaclicks = lines.filter(e=>e.event==='cta_click').length;
                    const blocked = Math.round((lines.filter(e=>e.event==='budget_block').length / Math.max(1, ctaclicks))*100);
                    const endpoints = 10; // placeholder until backend metric
                    const R = document.getElementById('k_receipts');
                    const B = document.getElementById('k_blocked');
                    const E = document.getElementById('k_endpoints');
                    if(R) R.textContent = t(receipts);
                    if(B) B.textContent = blocked ? (blocked+'%') : '—';
                    if(E) E.textContent = String(endpoints);
                }
                run();
            }catch{}
        })();
    </script>
</Base>
