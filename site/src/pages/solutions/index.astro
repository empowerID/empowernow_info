---
import Base from '../../layouts/Base.astro';
const title = 'Solutions — EmpowerNow';
const description = 'Create tools once. Enforce policy and budgets across any agent platform. Prove every action with receipts.';
const canonical = '/solutions/';
const items = [
	{ href: '/solutions/spend-governance/', title: 'Spend Governance', desc: 'Budgets 402 + caps + receipts' },
	{ href: '/solutions/agent-safe-tools/', title: 'Agent‑Safe Tools', desc: 'MCP Gateway + ARIA Shield' },
	{ href: '/solutions/audit-receipts/', title: 'Audit & Receipts', desc: 'Provable evidence per call' },
	{ href: '/solutions/delegated-authorization/', title: 'Delegated Authorization', desc: 'AuthZEN PDP + Membership' },
	{ href: '/solutions/zero-token-spas/', title: 'Zero‑Token SPAs', desc: 'Session UX with BFF + AuthZEN decisions' },
];
---
<Base title={title} description={description} canonical={canonical}>
    <!-- Zone A: Hero (full-bleed) -->
    <section class="hero-plate page-stage cv-auto" data-section="hero" style={`padding:160px 0 64px;background-image:url(${import.meta.env.BASE_URL}images/backgrounds/bg-homepage-hero.jpg);background-size:cover;background-position:center;background-repeat:no-repeat`}>
		<div class="container" style="position:relative;z-index:1;display:flex;gap:28px;align-items:center;flex-wrap:wrap">
			<div style="flex:1 1 520px;min-width:300px">
				<h1 class="display" style="margin:0 0 8px">Create. Control. Prove.</h1>
				<p style="color:#9ba3b7;max-width:70ch;margin:0 0 14px">Turn any API into a <strong>secure agent tool</strong> in <strong>5 minutes</strong>. Enforce policy and budgets across platforms. <strong>Prove</strong> every action with receipts.</p>
                <div style="display:flex;gap:10px;flex-wrap:wrap;margin-top:8px">
                    <a class="btn btn-primary" data-ev="cta_click" data-label="solutions-quickstart" href={`${import.meta.env.BASE_URL}products/crud/`}>Start Quickstart</a>
                <a class="btn btn-ghost" data-ev="cta_click" data-label="solutions-demo" href={`${import.meta.env.BASE_URL}resources/demo/`}>Watch 90‑sec demo</a>
                <a class="btn btn-ghost" data-ev="cta_click" data-label="solutions-aria" href={`${import.meta.env.BASE_URL}products/aria/`}>What is ARIA?</a>
                </div>
			</div>
			<figure style="flex:1 1 380px;min-width:280px;margin:0" aria-label="API to CRUD Service to Platforms diagram">
				<div class="diagram vignette" style="margin:0">
					<div style="display:grid;grid-template-columns:repeat(5,1fr);align-items:center;gap:8px">
						<div class="node">API</div>
						<div class="flow"></div>
						<div class="node">CRUD<br/>Service</div>
						<div class="flow"></div>
						<div class="node">Platforms</div>
					</div>
				</div>
			</figure>
		</div>
	</section>

    <!-- Zone B: Problem cards -->
    <section class="container cv-auto" data-section="problems" style="padding:64px 0">
		<div style="display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:16px">
            <div class="glass-card" style="padding:16px">
				<h3 style="margin:0 0 8px">Spend is unpredictable</h3>
				<p style="color:#9ba3b7;margin:0 0 10px">Agent calls have no caps; costs drift with prompts and retries.</p>
                <a class="btn btn-ghost" data-ev="cta_click" data-label="problem-spend" href={`${import.meta.env.BASE_URL}solutions/spend-governance/`}>Control spend →</a>
			</div>
			<div class="glass-card" style="padding:16px">
				<h3 style="margin:0 0 8px">Tools are fragmented</h3>
				<p style="color:#9ba3b7;margin:0 0 10px">Each platform wants its own adapters and rules; governance falls behind.</p>
                <a class="btn btn-ghost" data-ev="cta_click" data-label="problem-tools" href={`${import.meta.env.BASE_URL}solutions/agent-safe-tools/`}>Unify tools →</a>
			</div>
			<div class="glass-card" style="padding:16px">
				<h3 style="margin:0 0 8px">Audit needs proof</h3>
				<p style="color:#9ba3b7;margin:0 0 10px">Logs aren’t enough; auditors need decisions, policies, and receipts.</p>
                <a class="btn btn-ghost" data-ev="cta_click" data-label="problem-audit" href={`${import.meta.env.BASE_URL}resources/controls-evidence/`}>See evidence →</a>
                <a class="btn btn-ghost" data-ev="cta_click" data-label="problem-aria" href={`${import.meta.env.BASE_URL}products/aria/`}>About ARIA →</a>
			</div>
		</div>
	</section>

    <!-- Zone C.1: Create — CRUD Service with comparison -->
    <section class="container cv-auto" data-section="create" style="padding:64px 0">
		<h2 class="section-title">Create tools in minutes (CRUD Service)</h2>
		<p style="color:#9ba3b7;max-width:70ch;margin:6px 0 12px">Turn any API/DB into agent‑safe tools with schema pins and policy hooks. Publish once to MCP / Copilot / Functions.</p>
        <div id="solutions-crud-compare" class="grid-3" style="display:grid;grid-template-columns:1fr 1fr;gap:16px">
            <div class="glass-card" style="padding:16px">
                <div class="product-rail rail--crud" aria-hidden="true"></div>
				<h3 class="nf-h3" style="margin:0 0 8px">Without CRUD Service</h3>
				<ul style="margin:0;color:#9ba3b7;line-height:1.7;padding-left:18px">
					<li>~6 weeks per API integration</li>
					<li>Custom code, per platform</li>
					<li>One stack at a time</li>
					<li>Unclear guardrails</li>
				</ul>
			</div>
            <div class="glass-card" style="padding:16px;border-color:var(--color-accent);box-shadow:0 0 24px rgba(0,231,246,.25)">
                <div class="product-rail rail--crud" aria-hidden="true"></div>
				<h3 class="nf-h3" style="margin:0 0 8px">With CRUD Service</h3>
				<ul style="margin:0;color:#9ba3b7;line-height:1.7;padding-left:18px">
					<li><strong>~5 minutes</strong> from API to tool</li>
					<li><strong>No code</strong>, publish once</li>
					<li><strong>MCP, Copilot, OpenAI Functions</strong></li>
					<li><strong>Schema pins + policy hooks built‑in</strong></li>
				</ul>
			</div>
		</div>
		<p style="opacity:.7;margin-top:8px;font-size:14px"><em>Times are representative; shown live in demo.</em></p>
		<div style="display:flex;gap:10px;flex-wrap:wrap;margin-top:10px">
            <a class="btn btn-primary" data-ev="cta_click" data-label="crud_qs" href={`${import.meta.env.BASE_URL}products/crud/`}>Quickstart</a>
            <a class="btn btn-ghost" data-ev="cta_click" data-label="crud_catalog" href={`${import.meta.env.BASE_URL}resources/research/`}>Adapter catalog</a>
		</div>
	</section>

	<!-- Zone C.2: Control stack -->
    <section class="container cv-auto" data-section="control" style="padding:64px 0">
		<h2 class="section-title">Control: Complete Enforcement Stack</h2>
        <div class="glass-card" style="padding:16px">
            <div class="product-rail rail--gateway" aria-hidden="true"></div>
			<ul style="color:#9ba3b7;line-height:1.8;margin:0 0 10px;padding-left:18px">
				<li><strong>Pre‑exec (MCP Gateway)</strong> <span class="badge badge--ga">GA</span>: validate <strong>plan & schema pins</strong>, block off‑policy before model.</li>
				<li><strong>Authorization (AuthZEN PDP)</strong> <span class="badge badge--ga">GA</span>: who/what/for‑whom/constraints (+ obligations/TTL).</li>
				<li><strong>Runtime (ARIA Shield)</strong> <span class="badge badge--beta">Beta</span>: <strong>budgets (HTTP 402)</strong>, params allow‑lists, egress filters; cost attribution.</li>
			</ul>
            <div style="display:flex;gap:8px;flex-wrap:wrap"><a class="btn btn-primary" href={`${import.meta.env.BASE_URL}solutions/agent-safe-tools/`}>Security brief</a><a class="btn btn-ghost" href={`${import.meta.env.BASE_URL}solutions/delegated-authorization/`}>Reference architecture</a></div>
		</div>
	</section>

	<!-- Zone C.3: Prove receipts -->
    <section class="container cv-auto" data-section="prove" style="padding:64px 0">
		<h2 class="section-title">Prove: Receipts</h2>
		<div class="glass-card" style="padding:16px">
			<div style="opacity:.8;margin-bottom:6px">Receipt (6 lines)</div>
			<pre class="glass-card" style="padding:12px;overflow:auto"><code>{`
{
  "decision_id": "d-9f2",
  "policy_hash": "sha256:a1c",
  "tool_schema": "mcp_v2.1",
  "cost_usd": 0.012,
  "timestamp": "2025-01-27T10:23:45Z"
}
`}</code></pre>
			<div style="opacity:.7;margin-top:8px;font-size:14px">Label: <em>Test Environment — Production Format</em></div>
            <div style="display:flex;gap:8px;flex-wrap:wrap;margin-top:10px"><a class="btn btn-ghost" href={`${import.meta.env.BASE_URL}products/receipts/`}>View sample receipts</a></div>
		</div>
	</section>

	<!-- Zone D: Role paths -->
    <section class="container cv-auto" data-section="role-paths" style="padding:64px 0">
		<h2 class="section-title">Choose your path</h2>
		<div class="grid-3">
			<a class="glass-card role-link" data-ev="role_path_click" data-label="build" href={`${import.meta.env.BASE_URL}products/crud/`} style="padding:16px;position:relative">
				<h3 style="margin:0 0 8px">Build tools</h3>
				<p style="color:#9ba3b7;margin:0">Create secure agent tools in minutes.</p>
				<span class="arrow" aria-hidden="true" style="position:absolute;right:12px;bottom:12px;color:var(--color-accent)">→</span>
			</a>
			<a class="glass-card role-link" data-ev="role_path_click" data-label="control" href={`${import.meta.env.BASE_URL}solutions/spend-governance/`} style="padding:16px;position:relative">
				<h3 style="margin:0 0 8px">Control spend</h3>
				<p style="color:#9ba3b7;margin:0">Budgets, caps, and receipts per call.</p>
				<span class="arrow" aria-hidden="true" style="position:absolute;right:12px;bottom:12px;color:var(--color-accent)">→</span>
			</a>
			<a class="glass-card role-link" data-ev="role_path_click" data-label="audit" href={`${import.meta.env.BASE_URL}resources/controls-evidence/`} style="padding:16px;position:relative">
				<h3 style="margin:0 0 8px">Pass audit</h3>
				<p style="color:#9ba3b7;margin:0">Evidence mapped to controls, ready to share.</p>
				<span class="arrow" aria-hidden="true" style="position:absolute;right:12px;bottom:12px;color:var(--color-accent)">→</span>
			</a>
		</div>
	</section>

	<!-- Zone E: Works with & Deployment -->
    <section class="container cv-auto" data-section="capabilities" style="padding:64px 0">
		<h2 class="section-title">Author once → publish many</h2>
		<div class="glass-card" style="padding:16px;color:#9ba3b7">
			<p style="margin:0 0 8px">Create tools in <strong>Automation Studio</strong> and publish across platforms with policy hooks built in.</p>
			<div style="display:flex;gap:8px;flex-wrap:wrap"><span class="chip">Anthropic MCP</span><span class="chip">OpenAI Functions</span><span class="chip">Microsoft Copilot</span><span class="chip">Google Vertex (Q1)</span><span class="chip">AWS Bedrock (Q1)</span><span class="chip">LangChain/LangGraph</span></div>
			<div style="display:flex;gap:8px;flex-wrap:wrap;margin-top:10px"><span class="chip">Cloud SaaS</span><span class="chip">Self‑hosted</span><span class="chip">Hybrid (NowConnect)</span></div>
		</div>
		<h2 class="section-title">Build & Publish</h2>
		<div class="grid-3">
            <a href={`${import.meta.env.BASE_URL}products/crud/`} class="glass-card" style="padding:16px">
                <h3 style="margin:0 0 8px">No‑Code Connectors (<abbr title="Anthropic's Model Context Protocol">MCP</abbr> Tools)</h3>
                <p style="color:#9ba3b7;margin:0 8px 10px 0;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden">Turn any API/DB into agent‑safe tools in minutes, safely — schema‑pinned, auth‑aware, policy‑ready.</p>
                    <div style="display:flex;gap:8px;flex-wrap:wrap"><span class="chip chip--outline">AI Platform</span><span class="chip chip--outline">Integrations</span><a class="btn btn-primary" href={`${import.meta.env.BASE_URL}products/crud/`}>Quickstart</a><a class="btn btn-ghost" href={`${import.meta.env.BASE_URL}resources/`}>Adapter catalog</a></div>
			</a>
            <a href={`${import.meta.env.BASE_URL}products/crud/`} class="glass-card" style="padding:16px">
				<h3 style="margin:0 0 8px">No‑Code Workflows for Agents</h3>
                <p style="color:#9ba3b7;margin:0 8px 10px 0;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden">Orchestrate multi‑step agent actions with approvals, retries, and obligations — without code.</p>
                <div style="display:flex;gap:8px;flex-wrap:wrap"><span class="chip chip--outline">AI Platform</span><span class="chip chip--outline">Ops</span><a class="btn btn-ghost" href={`${import.meta.env.BASE_URL}products/crud/`}>Workflow Quickstart</a><a class="btn btn-ghost" href={`${import.meta.env.BASE_URL}products/crud/`}>Examples</a></div>
			</a>
		</div>
	</section>

	<!-- Zone F: Status / Velocity -->
    <section class="container cv-auto" id="solutions-status" data-section="status" style="padding:64px 0">
		<h2 class="section-title">Status</h2>
        <div class="block-ghost" style="padding:12px;display:flex;gap:12px;flex-wrap:wrap;color:#9ba3b7">
			<span class="pill" style="border:1px solid var(--border-soft);padding:4px 10px;border-radius:999px">Platform: LIVE</span>
			<span class="pill" style="border:1px solid var(--border-soft);padding:4px 10px;border-radius:999px">Demo: ACTIVE</span>
			<span class="pill" style="border:1px solid var(--border-soft);padding:4px 10px;border-radius:999px">Create first tool: &lt;5 MIN</span>
			<span class="pill" style="border:1px solid var(--border-soft);padding:4px 10px;border-radius:999px">Docs: COMPLETE</span>
		</div>
	</section>
    <section class="container" style="padding:64px 0">
		<h2 class="section-title">Identity & Access for Agents</h2>
		<div class="grid-3">
			{[items[3], items[4]].map(p => (
				<a href={`${import.meta.env.BASE_URL}${p.href.replace(/^\//,'')}`} class="glass-card" style="padding:16px">
					<h3 style="margin:0 0 8px">{p.title}</h3>
					<p style="color:#9ba3b7;margin:0">{p.desc}</p>
				</a>
			))}
		</div>
	</section>
    <section class="container" style="padding:64px 0">
		<h2 class="section-title">Works with</h2>
            <div style="display:flex;gap:8px;flex-wrap:wrap;color:#9ba3b7">
            <span class="chip">Anthropic MCP</span><span class="chip">Microsoft Copilot</span><span class="chip">OpenAI Functions</span><span class="chip">Google Vertex (Q1)</span><span class="chip">AWS Bedrock (Q1)</span><span class="chip">LangChain/LangGraph</span>
		</div>
	</section>
    <style>
        /* Unify link colors; remove default visited purple */
        .container a:link, .container a:visited { color: var(--color-primary); text-decoration: none; }
        .container a:hover { text-decoration: underline; }
        /* Make chips quieter than CTAs */
        .chip { font-size: .85rem }
        .btn.btn-primary { box-shadow: 0 6px 24px rgba(0,231,246,.25) }
    </style>
    <script>
        (function(){
            try{
                (window).dataLayer=(window).dataLayer||[];
                // crud_compare_view when comparison enters viewport
                const cmp=document.getElementById('solutions-crud-compare');
                if(cmp && 'IntersectionObserver' in window){
                    const io=new IntersectionObserver((entries)=>{
                        entries.forEach(e=>{ if(e.isIntersecting){ (window).dataLayer.push({event:'crud_compare_view'}); io.disconnect(); } });
                    },{threshold:.5});
                    io.observe(cmp);
                }
                // section_time for create/control/prove
                const sections=['create','control','prove'];
                const t0=new Map();
                if('IntersectionObserver' in window){
                    const io2=new IntersectionObserver((entries)=>{
                        entries.forEach(e=>{
                            const id=(e.target).getAttribute('data-section');
                            if(!id||sections.indexOf(id)===-1) return;
                            if(e.isIntersecting){ t0.set(id, performance.now()); }
                            else if(t0.has(id)){ const ms=Math.round(performance.now()-t0.get(id)); (window).dataLayer.push({event:'section_time', section:id, ms}); t0.delete(id); }
                        });
                    },{threshold:.5});
                    document.querySelectorAll('[data-section]').forEach(el=> io2.observe(el));
                }
                // status_view when status pills shown
                const status=document.getElementById('solutions-status');
                if(status && 'IntersectionObserver' in window){
                    const io3=new IntersectionObserver((entries)=>{
                        entries.forEach(e=>{ if(e.isIntersecting){ (window).dataLayer.push({event:'status_view', shown:true}); io3.disconnect(); } });
                    },{threshold:.5});
                    io3.observe(status);
                }
            }catch{}
        })();
    </script>
</Base>
